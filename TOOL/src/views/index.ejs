<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8" />
    <title>Natural Language to BPMN</title>

    <link rel="stylesheet" href="/css/main.css">
    <link rel="stylesheet" href="/css/bpmn-js.css">

    <script src="/bpmn-navigated-viewer.development.js"></script>
    <script src="https://unpkg.com/jquery@3.3.1/dist/jquery.js"></script>
</head>

<body>
    <form method="post" id="bpmnUpload" enctype="multipart/form-data">
        <div>
            BPMN Process:
            <input id="bpmnInput" name="file" type="file" placeholder="test" value="test" for="caca">
        </div> 
        <div>
            Pool of Resources:
            <input id="resourcesInput" name="file" type="file">
        </div> 
        <div>
            Process Dependencies:
            <input id="dependenciesInput" name="file" type="file">
        </div> 
        <button type="submit">Upload Data</button>
    </form>

    <button onclick="fullReset()">Reset</button>

    <div class="loader" id="pg_bar"></div>
    <div id="canvas1"></div>

    <div>
        <label id="moveTaskText"></label>
        <button id="acceptTask">Yes</button>
        <button id="declineTask">No</button>
    </div>

    <div id="canvas2"></div>

    <div>
        <label id="gainText"><b>Test</b></label>
        <label id="acceptProcessText">Are you satisfied with the new version of the process?</label>
        <button id="acceptProcess">Yes</button>
        <button id="declineProcess">No</button>
    </div>

    <div class="loader" id="pg_bar"></div>

    <script>
    const form = document.getElementById('bpmnUpload');
    form.addEventListener('submit', handleSubmit);

    function handleSubmit(event) {
      event.preventDefault();
      upload();
    }

    async function upload() {
      try {
        //Reset elements for proper upload
        uploadReset();
        
        //Show progres bar
        $(document.getElementById('pg_bar')).show();

        //Retrieve uploaded files
        const donneesFormulaire = new FormData();
        const bpmnFileInput = document.getElementById('bpmnInput');
        const resourceFileInput = document.getElementById('resourcesInput');
        const dependencyFileInput = document.getElementById('dependenciesInput');

        //Show error if no BPMN file was given
        if (bpmnFileInput.files.length == 0) {
            alert("Error: You should upload at least the BPMN process.");
            fullReset();
            return;
        }

        //Show the canvas and the compute task button
        $(document.getElementById('canvas1')).show();
        
        donneesFormulaire.append("bpmn", bpmnFileInput.files[0]);

        if (resourceFileInput.files.length != 0) {
            donneesFormulaire.append("resources", resourceFileInput.files[0]);
        }

        if (dependencyFileInput.files.length != 0) {
            donneesFormulaire.append("dependencies", dependencyFileInput.files[0]);
        }

        const reponse = await fetch("http://localhost:3000/uploadBPMN", {
          method: "POST",
          body: donneesFormulaire,
        });
        const resultat = await reponse.json();
        
        sessionStorage.setItem('workingDirectoryExtension', resultat["directoryExtension"])
        sessionStorage.setItem('workingDirectory', resultat["directoryPath"]);
        sessionStorage.setItem('originalProcessFullPath', resultat["originalProcessFullPath"]);
        sessionStorage.setItem('originalProcessSubPath', resultat["originalProcessSubPath"]);
        processesArray = [resultat["originalProcessSubPath"]]
        sessionStorage.setItem('processesArray', JSON.stringify(processesArray));
       
        await showDiagram(processesArray[0], 1);

        const info = {
                field1: sessionStorage.getItem('workingDirectoryExtension'),
                field2: sessionStorage.getItem('workingDirectory')
            };
        
        $.post("/computeTask", info, function(result){
            const retVal = result['retVal'];

            if (retVal !== 0) {
                const error = result['msg'];
                alert("The computation of the task encountered an unexpected error:\n\n" + error);
                fullReset();
            } else {
                const electedTask = result['electedTask'];
                document.getElementById('moveTaskText').innerText = "Do you agree moving task \"" + electedTask + "\"?";
                $(document.getElementById('moveTaskText')).show();
                $(document.getElementById('acceptTask')).show();
                $(document.getElementById('declineTask')).show();
            }

            $(document.getElementById('pg_bar')).hide();
        });
      } catch (erreur) {
        alert(erreur);
      }
    }

    async function showDiagram(path, containerToUse){
        var bpmnViewer = new BpmnJS({
            container: '#canvas' + containerToUse
        });

        async function openDiagram(bpmnXML) {
            try {
               bpmnViewer.importXML(bpmnXML);
               var canvas = bpmnViewer.get('canvas');
               canvas.zoom('fit-viewport');
            } catch (err) {
              alert(err);
            }
        }

        $.get(path, openDiagram);
    }

    function fullReset(){
        document.getElementById('bpmnInput').value = "";
        document.getElementById('resourcesInput').value = "";
        document.getElementById('dependenciesInput').value = "";
        document.getElementById('canvas1').innerHTML = "";
        document.getElementById('canvas2').innerHTML = "";
        $(document.getElementById('canvas1')).hide();
        $(document.getElementById('canvas2')).hide();
        $(document.getElementById('moveTaskText')).hide();
        $(document.getElementById('acceptTask')).hide();
        $(document.getElementById('declineTask')).hide();
        $(document.getElementById('gainText')).hide();
        $(document.getElementById('acceptProcessText')).hide();
        $(document.getElementById('acceptProcess')).hide();
        $(document.getElementById('declineProcess')).hide();
        $(document.getElementById('pg_bar')).hide();
        sessionStorage.clear();
    }

    function uploadReset(){
        document.getElementById('canvas1').innerHTML = "";
        document.getElementById('canvas2').innerHTML = "";
        $(document.getElementById('canvas1')).hide();
        $(document.getElementById('canvas2')).hide();
        $(document.getElementById('moveTaskText')).hide();
        $(document.getElementById('acceptTask')).hide();
        $(document.getElementById('declineTask')).hide();
        $(document.getElementById('gainText')).hide();
        $(document.getElementById('acceptProcessText')).hide();
        $(document.getElementById('acceptProcess')).hide();
        $(document.getElementById('declineProcess')).hide();
        $(document.getElementById('pg_bar')).hide();
        sessionStorage.clear();
    }

    $(document).ready(function(){
        $("#acceptTask").click(function(){
            $(document.getElementById('pg_bar')).show();
            $(document.getElementById('acceptTask')).hide();
            $(document.getElementById('declineTask')).hide();

            const info = {
                field1: sessionStorage.getItem('workingDirectoryExtension'),
                field2: sessionStorage.getItem('workingDirectory')
            };
        
            $.post("/acceptTask", info, function(result){
                const retVal = result['retVal'];

                if (retVal !== 0) {
                    const error = result['msg'];
                    alert("The computation of the new process encountered an unexpected error:\n\n" + error);
                    $(document.getElementById('pg_bar')).hide();
                } else {
                    const aetGain = result['aetGain'];
                    const percentageGain = result['percentageGain'];
                    const bpmnFilePath = result['bpmnFilePath'];

                    processesArray = JSON.parse(sessionStorage.getItem('processesArray'));
                    processesArray.push(bpmnFilePath);
                    sessionStorage.setItem('processesArray', JSON.stringify(processesArray));
                  
                    //alert(JSON.stringify(processesArray));

                    $(document.getElementById('pg_bar')).hide();
                    $(document.getElementById('canvas2')).show();
                    $(document.getElementById('gainText')).show();
                    $(document.getElementById('acceptProcessText')).show();
                    $(document.getElementById('acceptProcess')).show();
                    $(document.getElementById('declineProcess')).show();
                    document.getElementById('moveTaskText').innerText = "Task moved successfully!";

                    showDiagram(bpmnFilePath, 2);
                    document.getElementById('gainText').innerHTML = "<b>GAIN: " + aetGain + "UT/" + percentageGain + "%</b>"
                }
            });
        });

        $("#declineTask").click(function(){
            const info = {
                field1: sessionStorage.getItem('workingDirectoryExtension'),
                field2: sessionStorage.getItem('workingDirectory')
            };
        
            $(document.getElementById('moveTaskText')).hide();
            $(document.getElementById('acceptTask')).hide();
            $(document.getElementById('declineTask')).hide();
            $(document.getElementById('pg_bar')).show();

            $.post("/declineTask", info, function(result){
                const retVal = result['retVal'];

                if (retVal !== 0) {
                    const error = result['msg'];
                    alert("The computation of the new task encountered an unexpected error:\n\n" + error);
                } else {
                    const electedTask = result['electedTask'];
                    document.getElementById('moveTaskText').innerText = "Do you agree moving task \"" + electedTask + "\"?";
                    $(document.getElementById('moveTaskText')).show();
                    $(document.getElementById('acceptTask')).show();
                    $(document.getElementById('declineTask')).show();
                    $(document.getElementById('pg_bar')).hide();
                }
            });
        });

        $("#acceptProcess").click(function(){
            const info = {
                field1: sessionStorage.getItem('workingDirectoryExtension'),
                field2: sessionStorage.getItem('workingDirectory')
            };
            
            $(document.getElementById('pg_bar')).show();
            document.getElementById('canvas1').innerHTML = "";
            document.getElementById('canvas2').innerHTML = "";
            $(document.getElementById('canvas2')).hide();
            $(document.getElementById('gainText')).hide();
            $(document.getElementById('acceptProcessText')).hide();
            $(document.getElementById('acceptProcess')).hide();
            $(document.getElementById('declineProcess')).hide();
            $(document.getElementById('moveTaskText')).hide();
            $(document.getElementById('acceptTask')).hide();
            $(document.getElementById('declineTask')).hide();

            processesArray = JSON.parse(sessionStorage.getItem('processesArray'));
            lastFile = processesArray[processesArray.length - 1];
            showDiagram(lastFile, 1);

            $.post("/acceptProcess", info, function(result){
                const retVal = result['retVal'];

                if (retVal !== 0) {
                    const error = result['msg'];
                    alert("The computation of the new task encountered an unexpected error:\n\n" + error);
                } else {
                    const electedTask = result['electedTask'];

                    if (electedTask === "") {
                        //We proposed all the tasks to move
                        document.getElementById('moveTaskText').innerText = "All the tasks have been moved, the process is as optimised as possible.";
                    } else {
                        document.getElementById('moveTaskText').innerText = "Do you agree moving task \"" + electedTask + "\"?";
                        $(document.getElementById('acceptTask')).show();
                        $(document.getElementById('declineTask')).show();
                    }

                    $(document.getElementById('pg_bar')).hide();
                    $(document.getElementById('moveTaskText')).show();
                }
            });
        });

        $("#declineProcess").click(function(){
            const info = {
                field1: sessionStorage.getItem('workingDirectoryExtension'),
                field2: sessionStorage.getItem('workingDirectory')
            };
        
            $(document.getElementById('pg_bar')).show();
            document.getElementById('canvas1').innerHTML = "";
            document.getElementById('canvas2').innerHTML = "";
            $(document.getElementById('canvas2')).hide();
            $(document.getElementById('gainText')).hide();
            $(document.getElementById('acceptProcessText')).hide();
            $(document.getElementById('acceptProcess')).hide();
            $(document.getElementById('declineProcess')).hide();
            $(document.getElementById('moveTaskText')).hide();
            $(document.getElementById('acceptTask')).hide();
            $(document.getElementById('declineTask')).hide();

            processesArray = JSON.parse(sessionStorage.getItem('processesArray'));
            fileToRemove = processesArray.pop();
            previousFile = processesArray[processesArray.length - 1];
            showDiagram(previousFile, 1);
            sessionStorage.setItem('processesArray', JSON.stringify(processesArray));

            //alert(JSON.stringify(processesArray));

            $.post("/declineProcess", info, function(result){
                const retVal = result['retVal'];

                if (retVal !== 0) {
                    const error = result['msg'];
                    alert("The computation of the new task encountered an unexpected error:\n\n" + error);
                } else {
                    const electedTask = result['electedTask'];
                    document.getElementById('moveTaskText').innerText = "Do you agree moving task \"" + electedTask + "\"?";
                    $(document.getElementById('moveTaskText')).show();
                    $(document.getElementById('acceptTask')).show();
                    $(document.getElementById('declineTask')).show();
                    $(document.getElementById('pg_bar')).hide();
                }
            });
        });
    });
    
            $("#reset_bt").click(function(){
                $(document.getElementById('pg_bar')).hide();
                $(document.getElementById('reset_bt')).show();
                $(document.getElementById('input_bt')).show();
                $(document.getElementById('input_et')).prop('readonly', false);
                document.getElementById('input_et').value = "";
                $(document.getElementById('api_key_et')).prop('readonly', false);
                $(document.getElementById('download_bt')).hide();
                $(document.getElementById('ok_bt')).hide();  
                $(document.getElementById('satisfaction_tv')).hide();
                $(document.getElementById('canvas')).hide();
                document.getElementById('canvas').innerHTML = "";
                $(document.getElementById('satisfaction_range_tv')).hide();
                $(document.getElementById('satisfaction_range')).hide();
		document.getElementById('satisfaction_range').value = "100";
                $(document.getElementById('satisfaction_value')).hide();
		document.getElementById('satisfaction_value').value = "Completely satisfied";
                sessionStorage.clear();
            });

    </script>
</body>

</html> 
