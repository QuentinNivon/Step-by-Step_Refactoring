<!DOCTYPE html>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Natural Language to BPMN</title>

    <!-- <link rel="stylesheet" href="/css/main.css"> -->
    <link rel="stylesheet" href="/css/bpmn-js.css" />
    <link rel="stylesheet" href="/css/main.css" />
    <link rel="stylesheet" href="/css/output.css" />

    <!-- <script src="/bpmn-navigated-viewer.development.js"></script> -->
    <script src="https://unpkg.com/bpmn-js/dist/bpmn-modeler.development.js"></script>
    <link
      rel="stylesheet"
      href="https://unpkg.com/bpmn-js/dist/assets/diagram-js.css"
    />
    <link
      rel="stylesheet"
      href="https://unpkg.com/bpmn-js/dist/assets/bpmn-js.css"
    />
    <link
      rel="stylesheet"
      href="https://unpkg.com/bpmn-js/dist/assets/bpmn-font/css/bpmn.css"
    />

    <script src="https://unpkg.com/jquery@3.3.1/dist/jquery.js"></script>
  </head>

  <body class="bg-gray-50 min-h-screen mb-8">
    <div class="mx-auto px-4">
      <div
        class="flex flex-col md:flex-row justify-between items-start md:items-stretch space-y-4 md:space-y-0 md:space-x-4 mt-4"
      >
        <form
          method="post"
          id="bpmnUpload"
          enctype="multipart/form-data"
          class="w-full md:w-2/6 xl:w-3/12 bg-white p-5 rounded-lg shadow"
        >
          <div class="space-y-4">
            <div>
              <label
                class="block cursor-pointer mb-2 text-sm font-medium text-gray-900"
                for="bpmnInput"
                >BPMN Process:</label
              >
              <input
                id="bpmnInput"
                name="file"
                type="file"
                placeholder="test"
                accept=".bpmn, .xml"
                class="w-full flex-grow text-sm text-blue-900 border rounded-full border-blue-200 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-300 file:text-blue-900 hover:file:bg-blue-100"
              />
            </div>
            <div>
              <label
                class="cursor-pointer block mb-2 text-sm font-medium text-gray-900"
                for="resourcesInput"
                >Global Information:</label
              >
              <input
                id="resourcesInput"
                name="file"
                type="file"
                class="w-full text-sm text-blue-900 border rounded-full border-blue-200 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-300 file:text-blue-900 hover:file:bg-blue-100"
              />
            </div>
            <div>
              <label
                for="dependenciesInput"
                class="cursor-pointer block mb-2 text-sm font-medium text-gray-900"
                >Process Dependencies:</label
              >

              <input
                id="dependenciesInput"
                name="file"
                type="file"
                class="w-full text-sm text-blue-900 border rounded-full border-blue-200 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-300 file:text-blue-900 hover:file:bg-blue-100"
              />
            </div>
          </div>

          <button
            type="submit"
            class="mt-4 px-4 py-2 bg-blue-600 hover:bg-blue-700 focus:ring-blue-500 focus:ring-offset-blue-200 text-white transition ease-in duration-200 text-center text-base font-semibold shadow-md focus:outline-none focus:ring-2 focus:ring-offset-2 rounded-lg"
          >
            Upload Data
          </button>
        </form>
        <div
          class="w-full md:w-4/6 xl:w-9/12 bg-white rounded-lg shadow overflow-hidden"
        >
          <div id="canvas1" class="w-full h-[250px] overflow-hidden"></div>
          <div
            class="flex flex-col md:flex-row items-center py-2"
          >
            <div>
              <label id="moveTaskText" class="ml-4"></label>
            </div>

            <div class="px-4">
              <button
                id="acceptTask"
                class="bg-green-500 text-white px-4 py-2 rounded-lg"
              >
                Yes
              </button>
              <button
                id="declineTask"
                class="bg-red-500 text-white px-4 py-2 rounded-lg"
              >
                No
              </button>
            </div>
          </div>
        </div>
      </div>

      <div class="loader pg_bar"></div>
      <div class="overlay pg_bar"></div>
      <!--  -->
      <div
        class="flex w-full h-auto mt-4 bg-white rounded-lg shadow overflow-hidden to-hide"
      >
        <div id="canvas2" class="w-full h-[350px] overflow-hidden"></div>
        <div
          class="flex flex-col md:flex-row justify-between items-center py-3 "
        >
          <div class="text-center md:text-left w-full md:w-auto">
            <label id="gainText" class="font-bold  ml-4"
              ><b>GAIN: 1UT/1.9%</b></label
            >
         
          
      
           
          </div>   
          <div class="flex space-x-2 justify-center md:justify-end w-full md:w-auto px-4">
            <label id="acceptProcessText" class="mt-2 "
            >Are you satisfied with the new version of the process?</label
          >
           <button
              id="acceptProcess"
              class="bg-green-500 text-white px-4 py-2 rounded-lg "
            >
              Yes
            </button>
            <button
              id="declineProcess"
              class="bg-red-500 text-white px-4 py-2 rounded-lg "
            >
              No
            </button>
         </div>
        </div>
      </div>
    </div>

    <script>
    const form = document.getElementById('bpmnUpload');
    form.addEventListener('submit', handleSubmit);

    function handleSubmit(event) {
      event.preventDefault();
      upload();
    }

    async function upload() {
      try {
        //Reset elements for proper upload
        uploadReset();
        
        //Show progres bar
        $(document.getElementsByClassName('pg_bar')).show();

        //Retrieve uploaded files
        const donneesFormulaire = new FormData();
        const bpmnFileInput = document.getElementById('bpmnInput');
        const resourceFileInput = document.getElementById('resourcesInput');
        const dependencyFileInput = document.getElementById('dependenciesInput');

        //Show error if no BPMN file was given
        if (bpmnFileInput.files.length == 0) {
            alert("Error: You should upload at least the BPMN process.");
            fullReset();
            return;
        }

        //Show the canvas and the compute task button
        $(document.getElementById('canvas1')).show();
        
        donneesFormulaire.append("bpmn", bpmnFileInput.files[0]);

        if (resourceFileInput.files.length != 0) {
            donneesFormulaire.append("resources", resourceFileInput.files[0]);
        }

        if (dependencyFileInput.files.length != 0) {
            donneesFormulaire.append("dependencies", dependencyFileInput.files[0]);
        }

        const reponse = await fetch("http://localhost:3000/uploadBPMN", {
          method: "POST",
          body: donneesFormulaire,
        });
        const resultat = await reponse.json();
        
        sessionStorage.setItem('workingDirectoryExtension', resultat["directoryExtension"])
        sessionStorage.setItem('workingDirectory', resultat["directoryPath"]);
        sessionStorage.setItem('originalProcessFullPath', resultat["originalProcessFullPath"]);
        sessionStorage.setItem('originalProcessSubPath', resultat["originalProcessSubPath"]);
        processesArray = [resultat["originalProcessSubPath"]]
        sessionStorage.setItem('processesArray', JSON.stringify(processesArray));
      
        const info = {
                field1: sessionStorage.getItem('workingDirectoryExtension'),
                field2: sessionStorage.getItem('workingDirectory')
            };
        
        $.post("/computeTask", info, function(result){
            const retVal = result['retVal'];

            if (retVal !== 0) {
                const error = result['msg'];
                alert("The computation of the task encountered an unexpected error:\n\n" + error);
                fullReset();
            } else {
                showDiagram(processesArray[0], 1);
                const electedTask = result['electedTask'];
                document.getElementById('moveTaskText').innerText = "Do you agree moving task \"" + electedTask + "\"?";
                $(document.getElementById('moveTaskText')).show();
                $(document.getElementById('acceptTask')).show();
                $(document.getElementById('declineTask')).show();
            }

            $(document.getElementsByClassName('pg_bar')).hide();
        });
      } catch (erreur) {
        alert(erreur);
      }
    }

    async function showDiagram(path, containerToUse){
        var bpmnViewer = new BpmnJS({
            container: '#canvas' + containerToUse
        });

        async function openDiagram(bpmnXML) {
            try {
               await bpmnViewer.importXML(bpmnXML);
               var canvas = bpmnViewer.get('canvas');
               canvas.zoom('fit-viewport');
            } catch (err) {
              alert(err);
            }
        }

        $.get(path, openDiagram);
    }

    function fullReset(){
        document.getElementById('bpmnInput').value = "";
        document.getElementById('resourcesInput').value = "";
        document.getElementById('dependenciesInput').value = "";
        document.getElementById('canvas1').innerHTML = "";
        document.getElementById('canvas2').innerHTML = "";
        $(document.getElementById('canvas1')).hide();
        $(document.getElementById('canvas2')).hide();
		$(document.getElementsByClassName("to-hide")).hide();
        $(document.getElementById('moveTaskText')).hide();
        $(document.getElementById('acceptTask')).hide();
        $(document.getElementById('declineTask')).hide();
        $(document.getElementById('gainText')).hide();
        $(document.getElementById('acceptProcessText')).hide();
        $(document.getElementById('acceptProcess')).hide();
        $(document.getElementById('declineProcess')).hide();
        $(document.getElementsByClassName('pg_bar')).hide();
        sessionStorage.clear();
    }

    function uploadReset(){
        document.getElementById('canvas1').innerHTML = "";
        document.getElementById('canvas2').innerHTML = "";
        $(document.getElementById('canvas1')).hide();
        $(document.getElementById('canvas2')).hide();
		$(document.getElementsByClassName("to-hide")).hide();
        $(document.getElementById('moveTaskText')).hide();
        $(document.getElementById('acceptTask')).hide();
        $(document.getElementById('declineTask')).hide();
        $(document.getElementById('gainText')).hide();
        $(document.getElementById('acceptProcessText')).hide();
        $(document.getElementById('acceptProcess')).hide();
        $(document.getElementById('declineProcess')).hide();
        $(document.getElementsByClassName('pg_bar')).hide();
        sessionStorage.clear();
    }

    $(document).ready(function(){
        $("#acceptTask").click(function(){
            $(document.getElementsByClassName('pg_bar')).show();
            $(document.getElementById('acceptTask')).hide();
            $(document.getElementById('declineTask')).hide();

            const info = {
                field1: sessionStorage.getItem('workingDirectoryExtension'),
                field2: sessionStorage.getItem('workingDirectory')
            };
        
            $.post("/acceptTask", info, function(result){
                const retVal = result['retVal'];

                if (retVal !== 0) {
                    const error = result['msg'];
                    alert("The computation of the new process encountered an unexpected error:\n\n" + error);
                    $(document.getElementsByClassName('pg_bar')).hide();
                } else {
                    const aetGain = result['aetGain'];
                    const percentageGain = result['percentageGain'];
                    const oldAET = result['oldAET'];
                    const newAET = result['newAET'];
                    const bpmnFilePath = result['bpmnFilePath'];

                    processesArray = JSON.parse(sessionStorage.getItem('processesArray'));
                    processesArray.push(bpmnFilePath);
                    sessionStorage.setItem('processesArray', JSON.stringify(processesArray));
                  
                    //alert(JSON.stringify(processesArray));

                    $(document.getElementsByClassName('pg_bar')).hide();
					$(document.getElementsByClassName("to-hide")).show();
                    $(document.getElementById('canvas2')).show();
                    $(document.getElementById('gainText')).show();
                    $(document.getElementById('acceptProcessText')).show();
                    $(document.getElementById('acceptProcess')).show();
                    $(document.getElementById('declineProcess')).show();
                    document.getElementById('moveTaskText').innerText = "Task moved successfully!";

                    showDiagram(bpmnFilePath, 2);
                    //document.getElementById('gainText').innerHTML = "<b>GAIN: " + aetGain + "UT/" + percentageGain + "%</b>"
                    document.getElementById('gainText').innerHTML = "<b>Previous AET: " + oldAET + "UT / New AET: " + newAET + "UT (Gain " + aetGain + "UT/" + percentageGain + "%)</b>"
                }
            });
        });

        $("#declineTask").click(function(){
            const info = {
                field1: sessionStorage.getItem('workingDirectoryExtension'),
                field2: sessionStorage.getItem('workingDirectory')
            };
        
            $(document.getElementById('moveTaskText')).hide();
			$(document.getElementsByClassName("to-hide")).hide();
            $(document.getElementById('acceptTask')).hide();
            $(document.getElementById('declineTask')).hide();
            $(document.getElementsByClassName('pg_bar')).show();

            $.post("/declineTask", info, function(result){
                const retVal = result['retVal'];

                if (retVal !== 0) {
                    const error = result['msg'];
                    alert("The computation of the new task encountered an unexpected error:\n\n" + error);
                } else {
                    document.getElementById('canvas1').innerHTML = "";
                    processesArray = JSON.parse(sessionStorage.getItem('processesArray'));
                    lastFile = processesArray[processesArray.length - 1];
                    showDiagram(lastFile, 1);                    

                    const electedTask = result['electedTask'];
                    document.getElementById('moveTaskText').innerText = "Do you agree moving task \"" + electedTask + "\"?";
                    $(document.getElementById('moveTaskText')).show();
                    $(document.getElementById('acceptTask')).show();
                    $(document.getElementById('declineTask')).show();
                    $(document.getElementsByClassName('pg_bar')).hide();
                }
            });
        });

        $("#acceptProcess").click(function(){
            const info = {
                field1: sessionStorage.getItem('workingDirectoryExtension'),
                field2: sessionStorage.getItem('workingDirectory')
            };
            
            $(document.getElementsByClassName('pg_bar')).show();
            document.getElementById('canvas1').innerHTML = "";
            document.getElementById('canvas2').innerHTML = "";
			$(document.getElementsByClassName("to-hide")).hide();
            $(document.getElementById('canvas2')).hide();
            $(document.getElementById('gainText')).hide();
            $(document.getElementById('acceptProcessText')).hide();
            $(document.getElementById('acceptProcess')).hide();
            $(document.getElementById('declineProcess')).hide();
            $(document.getElementById('moveTaskText')).hide();
            $(document.getElementById('acceptTask')).hide();
            $(document.getElementById('declineTask')).hide();

            processesArray = JSON.parse(sessionStorage.getItem('processesArray'));
            lastFile = processesArray[processesArray.length - 1];

            $.post("/acceptProcess", info, function(result){
                const retVal = result['retVal'];

                if (retVal !== 0) {
                    const error = result['msg'];
                    alert("The computation of the new task encountered an unexpected error:\n\n" + error);
                } else {
                    showDiagram(lastFile, 1);
                    const electedTask = result['electedTask'];

                    if (electedTask === "") {
                        //We proposed all the tasks to move
                        document.getElementById('moveTaskText').innerText = "All the tasks have been moved, the process is as optimised as possible.";
                    } else {
                        document.getElementById('moveTaskText').innerText = "Do you agree moving task \"" + electedTask + "\"?";
                        $(document.getElementById('acceptTask')).show();
                        $(document.getElementById('declineTask')).show();
                    }

                    $(document.getElementsByClassName('pg_bar')).hide();
                    $(document.getElementById('moveTaskText')).show();
                }
            });
        });

        $("#declineProcess").click(function(){
            const info = {
                field1: sessionStorage.getItem('workingDirectoryExtension'),
                field2: sessionStorage.getItem('workingDirectory')
            };
        
            $(document.getElementsByClassName('pg_bar')).show();
            document.getElementById('canvas1').innerHTML = "";
            document.getElementById('canvas2').innerHTML = "";
            $(document.getElementById('canvas2')).hide();
			$(document.getElementsByClassName("to-hide")).hide();
            $(document.getElementById('gainText')).hide();
            $(document.getElementById('acceptProcessText')).hide();
            $(document.getElementById('acceptProcess')).hide();
            $(document.getElementById('declineProcess')).hide();
            $(document.getElementById('moveTaskText')).hide();
            $(document.getElementById('acceptTask')).hide();
            $(document.getElementById('declineTask')).hide();

            processesArray = JSON.parse(sessionStorage.getItem('processesArray'));
            fileToRemove = processesArray.pop();
            previousFile = processesArray[processesArray.length - 1];
            sessionStorage.setItem('processesArray', JSON.stringify(processesArray));

            //alert(JSON.stringify(processesArray));

            $.post("/declineProcess", info, function(result){
                const retVal = result['retVal'];

                if (retVal !== 0) {
                    const error = result['msg'];
                    alert("The computation of the new task encountered an unexpected error:\n\n" + error);
                } else {
                    showDiagram(previousFile, 1);
                    const electedTask = result['electedTask'];
                    document.getElementById('moveTaskText').innerText = "Do you agree moving task \"" + electedTask + "\"?";
                    $(document.getElementById('moveTaskText')).show();
                    $(document.getElementById('acceptTask')).show();
                    $(document.getElementById('declineTask')).show();
                    $(document.getElementsByClassName('pg_bar')).hide();
                }
            });
        });
    });
    
            $("#reset_bt").click(function(){
                fullReset();
            });

    </script>
  </body>
</html>
